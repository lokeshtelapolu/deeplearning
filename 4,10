import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

# Sample data (X and y) - You can replace this with your actual data
X = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
y = np.array([1.5, 2.3, 3.2, 4.1, 5.5, 6.8, 7.4, 8.5, 9.6, 10.7])

# Reshape X to make it a 2D array (needed by scikit-learn)
X = X.reshape(-1, 1)

# Create and train the linear regression model
model = LinearRegression()
model.fit(X, y)

# Predict y values using the trained model
y_pred = model.predict(X)

# Get the estimated coefficients
b_0 = model.intercept_  # Intercept
b_1 = model.coef_[0]    # Slope

# Print the estimated coefficients
print(f"Estimated coefficients:\nb_0 = {b_0}\nb_1 = {b_1}")

# Plot the original data and the regression line
plt.scatter(X, y, color="orange", label="Data points")
plt.plot(X, y_pred, color="black", label="Regression line")
plt.xlabel("x")
plt.ylabel("y")
plt.legend()
plt.show()
